{{ ansible_managed | comment }}
[client]
#password = your_password
port = {{ mysql_port }}
socket = {{ mysql_socket }}

# The MySQL database server configuration file.
#
# You can copy this to one of:
# - "/etc/mysql/my.cnf" to set global options,
# - "~/.my.cnf" to set user-specific options.
#
# One can use all long options that the program supports.
# Run program with --help to get a list of available options and with
# --print-defaults to see which it would actually understand and use.
#
# For explanations see
# http://dev.mysql.com/doc/mysql/en/server-system-variables.html

# This will be passed to all mysql clients
# It has been reported that passwords should be enclosed with ticks/quotes
# escpecially if they contain "#" chars...
# Remember to edit /etc/mysql/debian.cnf when changing the socket location.

# Here is entries for some specific programs
# The following values assume you have at least 32M ram

[mysqld_safe]
pid-file	= {{ mysql_pid_file }}
socket		= {{ mysql_socket }}
nice		= 0

[mysqld]
#
# * Basic Settings
#
user		= mysql
pid-file	= {{ mysql_pid_file }}
socket		= {{ mysql_socket }}
port		= {{ mysql_port }}
datadir		= {{ mysql_datadir }}
tmpdir		= /tmp
lc-messages-dir	= /usr/share/mysql
skip-external-locking
#
# Instead of skip-networking the default is now to listen only on
# localhost which is more compatible and is not less secure.
bind-address		= {{ mysql_bind_address }}
#
# * Fine Tuning
#
key_buffer_size		= 16M
max_allowed_packet	= 16M
thread_stack		= 192K
thread_cache_size       = 8
# This replaces the startup script and checks MyISAM tables if needed
# the first time they are touched
myisam-recover-options  = BACKUP
max_connections        = {{ mysql_max_connections }}
#table_open_cache       = 64
#thread_concurrency     = 10
#
# * Query Cache Configuration
#
query_cache_type    = 0
query_cache_size    = 0
query_cache_limit	= 1M
#
# * Logging and Replication
#
# Both location gets rotated by the cronjob.
# Be aware that this log type is a performance killer.
# As of 5.1 you can enable the log at runtime!
#general_log_file        = /var/log/mysql/mysql.log
#general_log             = 1
#
# Error log - should be very few entries.
#
log_error = {{ mysql_log_error }}
#
# Here you can see queries with especially long duration
slow_query_log		= 1
slow_query_log_file	= {{ mysql_slow_query_log_file }}
long_query_time = 5
#log-queries-not-using-indexes
#
# The following can be used as easy to replay backup logs or for replication.
# note: if you are setting up a replication slave, see README.Debian about
#       other settings you may need to change.
#server-id		= 1
#log_bin			= /var/log/mysql/mysql-bin.log
expire_logs_days	= 10
max_binlog_size   = 100M
#binlog_do_db		= include_database_name
#binlog_ignore_db	= include_database_name
#
character_set_server              = utf8mb4
collation_server                  = utf8mb4_general_ci

default_storage_engine            = InnoDB
# * InnoDB
#
# Data directory, and data file
# innodb_data_home_dir              = INNODB_DATA_DIR
transaction_isolation             = REPEATABLE-READ

# This setting configures a single 10MB data file named ibdata1 that is auto-extending.
# No location for the file is given, so by default, InnoDB  creates it in the MySQL data directory.
innodb_data_file_path             = ibdata1:10M:autoextend

# Use 1 file per table
innodb_file_per_table = 1

innodb_log_files_in_group         = 2
innodb_buffer_pool_size           = {{ mysql_innodb_buffer_pool_size }}
innodb_log_file_size              = {{ mysql_innodb_log_file_size }}
innodb_log_buffer_size            = {{ mysql_innodb_log_buffer_size }}
innodb_lock_wait_timeout          = {{ mysql_innodb_lock_wait_timeout }}

# InnoDB is enabled by default with a 10MB datafile in /var/lib/mysql/.
# Read the manual for more InnoDB related options. There are many!
#
# * Security Features
#
# Read the manual, too, if you want chroot!
# chroot = /var/lib/mysql/
#
# For generating SSL certificates I recommend the OpenSSL GUI "tinyca".
#
# ssl-ca=/etc/mysql/cacert.pem
# ssl-cert=/etc/mysql/server-cert.pem
# ssl-key=/etc/mysql/server-key.pem


[client]
default_character_set             = utf8
